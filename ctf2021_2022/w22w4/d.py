
from Crypto.Util.Padding import pad, unpad
from Crypto.Util.number import GCD, isPrime
from Crypto.Random.random import getrandbits
from Crypto.Util.py3compat import *
import math

# server 

e = 65537
N = 514973057526651648113929673225369150620304074345192765294093014941581587530035114930755524053316899009647379771775625230368859338665100151851375663738184901053670600718309101877279369526258018035806059767667578370273832207316757160636844445186672177617484121593580371420995831268166094985702755240596895352765935087121277204351859523688154280322760189558095903608973696055590952744662140210105645878873849799861639529634407621730239495844094051142363190260117692282440587224014914716454771990110817953197010390388369941312859621181140661287301392635875241543024208933184235282533453762899383166995755447198371865236804220512674262997578078218091829573272175532700978388790836986712561352872517397941937842814923836009015205551685858680627780381912313406102204474509169956418518961830125364343854990782025202486486680676603448988495203824993378535509108580544335466794846979344413345089390256502047254418538794982404829458136390876775443228533683739054346932335584904928249105684854663230232544480210488642809000386032232794101342728163445567995804070411915489644134250713028804268618375785724704544760979798550331791119500106069485157532282266811352436971998619649212468536256319772090296489336031033032293735724325635709955557424311
n_bits = 2048
ctxt =322481726876600523254912119302041975983508963118826898178382259528355485998007548932716063743873289362678516682978904018731743613263213408111436775802986791810771390117853878657963669879802039985613928461144297589529410943325221665548301758068641809411879137824583892915611300154758723280739383267560059155211773978264055933992338567732065615170668699078286977390332730986284532811234388730717410733547579961381992828103387495306946516339840547062618620709573628144234859396398058167351432282978750409910225504465762482174931839111515323392538648701149798466051651688497618699556733679008746760406165523552485990095333488760620011423269023028817484156791250510065390580985163832448140132115718850675883052073608937762515972197115364523595578089715643068454832040423112963266622734831357304613553528981938327829928957436757992166465371333211730239495449567046790542391857131088621069651270376851921580793527032370620396369955011686477242750299465776743187946587417917721028713914560237566516413750685597877837994027740581396346193579183052178576515517856690257655826810497760460308571871598961395283244308929518643059162656713829414105354183135181240562611160311851909016321010070789051422527245345462202807175088461933681445715241134


'''
n_bits = 2048
e = 65537
N = 712173556304365065331713585789233129624945243222954976232002556354515341213530388636930040263051048368334575111269572495987846299463341287544188552593054660829601986352757324542244928417514817963973200367274827211205687032156435144684007041326527617717843577892449195002712005306128392818225691523600440836973515124863507877701829634412975528224102240794350987567133972368326112148785556760263859420582711297259119763532840374307003441374769887334977540642778247523046866661860453304918119640949742325765251992569193518580261382018866705314902982732142338613049322940108864439405894346995941046780594875538676793331901520755310099352776544804135661214093627479443908430982259070455954775965958274901571694206015570971725204455246349134504470762293959420573873569769365479604406600845299447723975236187439492873829380220423037132480008559087614412856604760948813983290017077191953251114609343629294275593088587475667319519943830648067897148521826610453514837266882331958009459687071190277384558392041403258476060249799516775071829039393242224006180501192174653200026224516217305128709270416916874455366125205805695957182586001102718606088317479166366468010871068143870190890590063823798464427181042798547732611646758170555449029336117
ctxt = 631180477410195416595348263375317597624604237782588157748505512519062334560473351236144161047398299962138555756753334200443221038374929907864634609321840369829798535961704694435973784934428049541326300255054984123827015715891997777002487218296143729294603094765823807673820196909480157552207941797322382605317986680376223062307325305893425949379055995756457534443872486185133276604848348971343535049668981637306607199530885418495975621404199597035126514779036972265988404728928335948718095843431988151685381388316778811391006285492933249215573758473776347989562267973006487376123203784710310244793093755650039908072989990696451624400280566387348243948024547262732150552904946590737809794404098383155352330994702739820888490906510115808847170940019577806364439894907634393420318856106554539746509977050682830027779893681242662580233379514166474012204845102201898094480834722212558939261415120260572365874257374732804150948556456066730993824613162913688135796052365977262800673731440943093535528371475569403756269480241682310017826645155358028266383078086035470595749751752284907438930005785125354844309339023327090291455197214280161809523611537588028672240905533517307339219147423335854607606263630227012054087007329637085796177496719
'''

# N_sqrt = math.isqrt(N)
N_sqrt = 22693017814443535312992042003503849229301926050262564154300925732446458973226715745193963081314480234837545570748062954561479872316017760090026520691292028497149367314753016221539300745290305655390224838517472191334004463280800900721895123648485128593839011180083548510922845562863893122065150261221343678063619193140955959934506577948210446202297994275179904822109258707914302021864272845653934647540273782977816620356494328597773338737201409555057483845011146177663964707210826262181916337357762751606038443097831700959012092247966692168357239352144708749618415027445736904824595252257280894050134208401625169239343
# print(isPrime(N_sqrt))
p = N_sqrt
q = N_sqrt

while True:
    if isPrime(p):
        break
    p -= 1

while True:
    if isPrime(q):
        break
    q += 1

# print("p: ", p , " q: ", q)
def decrypt(ctxt):
    carmichael_N = int((p-1)*(q-1)//GCD(p-1, q-1))
    d = pow(e, -1, carmichael_N)
    print("d: ", d)

    bytes_ptxt = pow(ctxt, d, N).to_bytes(2048//8, "big")
    ptxt = str(unpad(bytes_ptxt, 2048//8), "utf-8")
    print("flag: ", ptxt)

decrypt(ctxt)
